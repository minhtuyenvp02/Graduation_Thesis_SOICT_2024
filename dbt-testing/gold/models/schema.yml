#version: 2
#
#models:
#  - name: fhvhv_trip
#    description: Fhvhv Trip Data
#    columns:
#      - name: license_num_id
#        data_type: varchar
#      - name: base_num_id
#        data_type: varchar
#      - name: pickup_datetime
#        data_type: timestamp
#      - name: dropoff_datetime
#        data_type: timestamp
#      - name: pickup_location_id
#        data_type: integer
#      - name:  dropoff_location_id
#        data_type: integer
#      - name: originating_base_num
#        data_type: varchar
#      - name: request_datetime
#        data_type: varchar
#      - name: on_scene_datetime
#        data_type: varchar
#      - name: trip_miles
#        data_type: decimal
#      - name: trip_time
#        data_type: decimal
#      - name: base_passenger_fare
#        data_type: decimal
#      - name: tolls
#        data_type: decimal
#      - name: bcf
#        data_type: decimal
#      - name: sales_tax
#        data_type: decimal
#      - name: congestion_surcharge
#        data_type: decimal
#      - name: airport_fee
#        data_type: decimal
#      - name: tips
#        data_type: decimal
#      - name: driver_pay
#        data_type: decimal
#      - name: id
#        data_type: integer
#      - name: total_surcharge
#        data_type: decimal
#      - name: totals_amount
#        data_type: decimal
#      - name: pickup_date_id
#        data_type: varchar
#      - name: dropoff_date_id
#        data_type: varchar
#      - name: avg_speed
#        data_type: decimal
#      - name: fare_per_min
#        data_type: decimal
#      - name: fare_per_mile
#        data_type: decimal
#      - name: differ_pay_proportion
#        data_type: decimal
#      - name: differ_surcharge_total
#        data_type: decimal
#      - name: pickup_time_id
#        data_type: varchar
#      - name: dropoff_time_id
#        data_type: varchar
#      - name: flags_key
#        data_type: varchar
version: 2

models:
#  - name: fhvhv_trip
#    description: Fhvhv Trip Data
#    tests:
#      - dbt_expectations.expect_table_row_count_to_equal_other_table:
#          compare_model: source('gold', 'fact_fhvhv_trip_t')
#      - dbt_expectations.expect_table_row_count_to_equal_other_table:
#          compare_model: source('bronze', 'fhvhv-tripdata')
#      - dbt_expectations.expect_table_column_count_to_equal:
#          value: 32
#
#    columns:
#      - name: id
#        tests:
#          - not_null
#      - name: pickup_datetime
#        tests:
#          - dbt_expectations.expect_column_values_to_be_of_type:
#              column_type: timestamp
#      - name: totals_amount
#        tests:
#          - dbt_expectations.expect_column_values_to_be_of_type:
#              column_type: decimal
#      - name: fare_per_min
#        tests:
#          - not_null
#          - dbt_expectations.expect_column_values_to_be_of_type:
#              column_type: double
#      - name: differ_pay_proportion
#        tests:
#          - not_null
#          - dbt_expectations.expect_column_values_to_be_of_type:
#              column_type: decimal
#      - name: differ_surcharge_total
#        tests:
#          - not_null
#          - dbt_expectations.expect_column_values_to_be_of_type:
#              column_type: decimal
  - name: fact_fhvhv_trip_tracking_daily_t
    columns:
      - name: date_id_fk
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: varchar
      - name: tracking_id
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: varchar
#          - dbt_expectations.expect_column_values_to_be_unique:
#              row_condition: "tracking_id is not null"
      - name: nums_trip
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: bigint
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              row_condition: "tracking_id is not null"
      - name: totals_distance
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
      - name: totals_fare_amount
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0 
              row_condition: "tracking_id is not null"

      - name: avg_total_surcharge
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
              row_condition: "tracking_id is not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal

      - name: avg_time_per_trip
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
              row_condition: "tracking_id is not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal
      - name: total_congestion_surcharge
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
              row_condition: "tracking_id is not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal

      - name: avg_miles_per_trip
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
              row_condition: "tracking_id is not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal

      - name: avg_total_amount_per_trip
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
              row_condition: "tracking_id is not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal

      - name: avg_driver_paid_per_trip
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal

  - name: fact_fhvhv_trip_t
    columns:
      - name: date_fk
        tests:
            - not_null
            - relationships:
                to: ref('dim_date_t')
                field: date_id
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: integer

      - name: pickup_time_id_fk
        tests:
          - not_null
          - relationships:
              to: ref('dim_time_t')
              field: id
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: dropoff_time_id_fk
        tests:
          - not_null
          - relationships:
              to: ref('dim_time_t')
              field: id
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: pickup_location_id_fk
        tests:
          - not_null
          - relationships:
              to: ref('dim_location_t')
              field: location_id
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: dropoff_location_id_fk
        tests:
          - not_null
          - relationships:
              to: ref('dim_location')
              field: location_id
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: license_id_fk
        tests:
          - not_null
          - relationships:
              to: ref('dim_hvfhs_license_num_t')
              field: license_id
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: integer

      - name: base_id_fk
        tests:
          - not_null
          - relationships:
              to: ref('dim_dpc_base_num_t')
              field: base_num
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: varchar

      - name: trip_miles
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
#              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: trip_time
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
                #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: base_passenger_fare
        tests:
          - not_null
#          - dbt_expectations.expect_column_values_to_be_between:
#               min_value: 0  # (Optional)
#            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: double

      - name: tolls
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: sales_tax
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: congestion_surcharge
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: tips
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: driver_pay
        tests:
          - not_null
#          - dbt_expectations.expect_column_values_to_be_between:
#              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: totals_amount
        tests:
          - not_null
#          - dbt_expectations.expect_column_values_to_be_between:
#              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal

      - name: avg_speed
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: fare_per_mile
        tests:
          - not_null
#          - dbt_expectations.expect_column_values_to_be_between:
#              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: fare_per_min
        tests:
          - not_null
#          - dbt_expectations.expect_column_values_to_be_between:
#              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: double

      - name: total_surcharge
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal

      - name: differ_pay_proportion
        tests:
#          - dbt_expectations.expect_column_values_to_be_between:
#              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal

      - name: differ_surcharge_total
        tests:
#          - dbt_expectations.expect_column_values_to_be_between:
#              min_value: 0  # (Optional)
            #              row_condition: "id not null"
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: decimal